// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrickVault.Api.Data;

#nullable disable

namespace TrickVault.Api.Migrations
{
    [DbContext(typeof(TrickVaultDbContext))]
    partial class TrickVaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryTrick", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("TricksId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "TricksId");

                    b.HasIndex("TricksId");

                    b.ToTable("TrickCategory", (string)null);
                });

            modelBuilder.Entity("TrickVault.Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Card Magic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Coin Magic"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mentalism"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bizarre Magic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Illusions"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escapology"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Children's Magic"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Comedy Magic"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Utility / Sleights"
                        });
                });

            modelBuilder.Entity("TrickVault.Api.Models.Trick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Credits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tricks");
                });

            modelBuilder.Entity("CategoryTrick", b =>
                {
                    b.HasOne("TrickVault.Api.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrickVault.Api.Models.Trick", null)
                        .WithMany()
                        .HasForeignKey("TricksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
